
KILL A PORT NUMBER
If you have npm installed you can also run
npx kill-port PORT_NUMBER



# what should be in application.properties file to customizing the spring boot application
# Link: https://docs.spring.io/spring-boot/docs/1.1.6.RELEASE/reference/html/common-application-properties.html


// API springboot Demo
https://www.youtube.com/watch?v=5PdEmeopJVQ&ab_channel=freeCodeCamp.org
https://github.com/fhsinchy/movieist/tree/master/src/main/java/dev/farhan/movieist/movies

CASS Report Development for OPS and Client Service Teams
	•	Documented detailed business and technical requirements on the Confluence page.
	•	Designed and developed a new template for storing daily exposure data, including all required reporting columns.
	•	Created F3 jobs and Control-M jobs to automate daily report generation.
	•	Developed DSS flow service configuration to load the report data daily into the staging table of the dbmarginil schema.
	•	Designed and created the staging and archival tables for data management.
	•	Implemented stored procedure logic to generate the CASS report, along with scripts to call the procedure and generate separate reports for both OPS and Client Service teams.
	•	Enhanced the logic later to include additional columns (e.g., CCP, FX_RATE) missing from the original DER template.
	•	Modified the DBMargin template, staging table, and archival table to accommodate these changes.
	•	Updated DSS configurations, reloaded data, and performed comprehensive archival testing.
	•	Implemented Repgen and Control-M changes to ensure smooth report generation and scheduling.
	•	Conducted a detailed handover session and explained all changes to Rajesh.
MCUBE Balance Report Development
	•	Developed stored procedure logic in the dbmarginil schema to load daily price and haircut information from dbmargin tables.
	•	Created Control-M jobs and supporting scripts to automate the data load process, scheduled Sunday–Thursday at 9:30 PM EST, aligned with the DBREX job schedule.
	•	Designed and implemented a stored procedure to generate the MCUBE Balance Report, resolving multiple data outliers through extensive testing and validation.
	•	Developed a Java utility to identify and analyze outliers between the DBMargin and DBREX MCUBE Balance reports.
	•	Collaborated closely with Rajesh to understand the DBREX MCUBE Balance report generation logic (built in Informatica and PL/SQL).
	•	Conducted multiple parallel production tests and deployments to address performance issues and data mismatches.
	•	Provided knowledge transfer (KT) to the MCUBE team, addressed their feedback and enhancement requests, and obtained final sign-off after successful production validation.
	•	Implemented a feed enhancement to convert As_of_date into yyyy-MM-dd format as per MCUBE team requirements.
	•	Achieved significant performance optimization by:
	•	Aggregating 60-day-old balances into local tables for faster data retrieval.
	•	Archiving 2-month-old price and haircut data into history tables to improve performance.
	•	Adding table partitioning, reducing report generation time to under 12 minutes.
	•	Automating archival of data older than 65 business days via the dbmarginil archival process.
